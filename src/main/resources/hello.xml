<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://code.alibabatech.com/schema/dubbo
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd">


    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="demo-provider"  />

    <!--     使用multicast广播注册中心暴露服务地址 -->
    <!--     <dubbo:registry address="multicast://224.5.6.7:1234" /> -->

    <!-- 使用zk广播注册中心暴露服务地址 -->
    <dubbo:registry id="zk1"  address="localhost:2181"  protocol="zookeeper" />

    <!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol id="mydubbo"  name="dubbo" port="20880" />

    <!-- 指定是用zk,哪個 protocol-->
    <dubbo:provider registry="zk1"  protocol="mydubbo" />

    <!-- 声明需要暴露的服务接口 -->
    <dubbo:service interface="com.github.ydh.api.HelloService" ref="helloService" filter="tracing"/>

    <!-- 和本地bean一样实现服务 -->
    <bean id="helloService" class="com.github.ydh.impl.HelloServiceImpl" />

    <!-- 2. zipkin 相关的配置 -->
    <!-- 使用 OKHttp 来发送 trace 信息到 Zipkin Server。这里的 Zipkin Server 启动在本地 -->
    <bean id="sender" class="zipkin2.reporter.beans.OkHttpSenderFactoryBean">
        <property name="endpoint" value="http://localhost:9411/api/v2/spans"/>
    </bean>

    <bean id="tracing" class="brave.spring.beans.TracingFactoryBean">
        <property name="localServiceName" value="hello-service"/>
        <property name="spanReporter">
            <bean class="zipkin2.reporter.beans.AsyncReporterFactoryBean">
                <property name="sender" ref="sender"/>
                <!-- wait up to half a second for any in-flight spans on close -->
                <property name="closeTimeout" value="500"/>
            </bean>
        </property>
        <property name="currentTraceContext">
            <bean class="brave.spring.beans.CurrentTraceContextFactoryBean">
                <property name="scopeDecorators">
                    <bean class="brave.context.slf4j.MDCScopeDecorator" factory-method="create"/>
                </property>
            </bean>
        </property>
    </bean>
</beans>